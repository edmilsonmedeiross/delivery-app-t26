version: '3.9'
services:
  frontend:
    container_name: app_frontend
    working_dir: /app-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: dev
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/app-frontend
  # backend:
  #   container_name: app_backend
  #   working_dir: /app-backend
  #   restart: always
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   ports:
  #     - 3001:3001
  #   command: dev
  #   volumes:
  #     - ./backend:/app-backend
  #   environment:
  #     - DB_USER=root
  #     - DB_PSW=123456
  #     - DB_PORT=27017
  #     - JWT_SECRET=jwt_secret
  #     - DB_HOST=db
  #     - DATABASE_URL=mongodb://root:123456@localhost:27017/recipesT26
  #   depends_on:
  #     - db
  db:
    image: mysql:8.0.32
    container_name: db
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=recipesT26
    restart: 'always'
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"] # Deve aguardar o banco ficar operacional
      timeout: 10s
      retries: 5
    cap_add:
      - SYS_NICE # Deve omitir alertas menores
  # db:
  #   image: mongo
  #   ports:
  #     - 27017:27017
  #   environment:
  #     - MONGO_INITDB_DATABASE=recipesT26
  #     - MONGO_INITDB_ROOT_USERNAME=root
  #     - MONGO_INITDB_ROOT_PASSWORD=123456

# version: '3.9'
# services:
#   frontend:
#     container_name: app_frontend
#     build: ./frontend
#     ports:
#       - 3000:3000
#     working_dir: /app-frontend
#     # Os `healthcheck` devem garantir que a aplicação
#     # está operacional, antes de liberar o container
#     healthcheck:
#       test: ["CMD", "lsof", "-t", "-i:3000"]  # Caso utilize outra porta interna para o front, altere ela aqui também
#       timeout: 10s
#       retries: 5
#     command: dev 
#     volumes: 
#       - ./web/src:/app-web/src
#   backend:
#     container_name: app_backend
#     build: ./backend
#     ports:
#       - 3001:3001
#     working_dir: /app-backend
#     # Caso queira que o container esteja atualizado durante o desenvolvimento, sem que você precise ficar fazendo down e up dos containers, descomente as 3 linhas abaixo
#     command: dev 
#     volumes: 
#         - ./backend/src:/app-backend/src
#     depends_on:
#       db:
#         condition: service_healthy
#     environment:
#       - APP_PORT=3001
#       - JWT_SECRET=jwt_secret
#       # Os dados abaixo se referem ao container `db`
#       # Dica: Relembre aqui da comunicação interna entre containers
#       - DB_USER=root
#       - DB_PASS=123456
#       - DB_HOST=db
#       - DB_PORT=3306
#     healthcheck:
#       test: ["CMD", "lsof", "-t", "-i:3001"] # Caso utilize outra porta interna para o back, altere ela aqui também
#       timeout: 10s
#       retries: 5
#   db:
#     image: mongo
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: root
#       MONGO_INITDB_ROOT_PASSWORD: example
#     restart: 'always'
#     healthcheck:
#       test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"] # Deve aguardar o banco ficar operacional
#       timeout: 10s
#       retries: 5
#     cap_add:
#       - SYS_NICE # Deve omitir alertas menores